# docker-compose.yml
version: '3.8'

services:
  api:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    depends_on:
      - postgres
      - localstack
    environment:
      - PORT=8080
      - ENV=local
      - S3_BUCKET_NAME=my-test-bucket
      - SQS_QUEUE_URL=http://localstack:4566/000000000000/my-queue
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - DB_NAME=postgres
      - COGNITO_USER_POOL_ID=${COGNITO_USER_POOL_ID:-us-east-1_testpool}
      - COGNITO_CLIENT_ID=${COGNITO_CLIENT_ID:-1234567890abcdef}
    networks:
      - app-network

  lambda:
    build:
      context: .
      dockerfile: lambda/Dockerfile.lambda
    depends_on:
      - localstack
      - postgres
    environment:
      - ENV=local
      - S3_BUCKET_NAME=my-test-bucket
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - DB_NAME=postgres
    networks:
      - app-network

  postgres:
    image: postgres:14
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=postgres
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - app-network

  localstack:
    image: localstack/localstack:latest
    ports:
      - "4566:4566"
    environment:
      - SERVICES=s3,sqs,lambda,cognito
      - DEFAULT_REGION=us-east-1
      - LAMBDA_EXECUTOR=docker-reuse
      - DOCKER_HOST=unix:///var/run/docker.sock
      - DATA_DIR=/tmp/localstack/data
    volumes:
      - ./setup-aws.sh:/docker-entrypoint-initaws.d/setup-aws.sh
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  postgres-data: